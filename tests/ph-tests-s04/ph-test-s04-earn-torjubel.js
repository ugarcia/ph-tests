// Generated by CoffeeScript 1.8.0
(function() {
  var PhantomTest, amount, args, argsString, baseUrl, env, fixOffercode, maxLoginAttempts, pages, password, phTest, platform, runPage, user, waiting, _ref, _ref1, _ref2, _ref3, _ref4;

  PhantomTest = require('../../ph-base');

  args = require('system').args;

  argsString = args.join(" ");

  env = ((_ref = /-{0,2}env[= ](\w+)/.exec(argsString)) != null ? _ref[1] : void 0) || 'dev';

  user = ((_ref1 = /-{0,2}user[= ]([-_.A-Za-z0-9]{6,30})/.exec(argsString)) != null ? _ref1[1] : void 0) || 'TEST_ING_LOAD500';

  password = ((_ref2 = /-{0,2}password[= ]([^ ]+)/.exec(argsString)) != null ? _ref2[1] : void 0) || 'Hamburg01#';

  amount = parseInt(((_ref3 = /-{0,2}amount[= ](\d+)/.exec(argsString)) != null ? _ref3[1] : void 0) || '1', 10);

  waiting = parseInt(((_ref4 = /-{0,2}waiting[= ](\d+)/.exec(argsString)) != null ? _ref4[1] : void 0) || '60', 10);

  platform = ['www', 'qat'][['prod', 'dev'].indexOf(env)];

  baseUrl = "https://" + platform + ".schalkebonus.de";

  maxLoginAttempts = 3;

  pages = [
    {
      url: '/#/login',
      tests: 'jasmine-test-s04-landing.js',
      interactions: 'interaction-s04-login.js',
      onTestsCompleted: function() {
        return this.defaultOnTestsCompleted('s04Login', user, password, maxLoginAttempts);
      }
    }, {
      url: '/secure/',
      tests: 'jasmine-test-s04-secure.js',
      interactions: 'interaction-s04-go2earns.js'
    }, {
      url: '/secure/earns/s04-collect-with-schalke',
      tests: 'jasmine-test-s04-earns.js',
      interactions: 'interaction-s04-go2earns-games.js'
    }, {
      url: '/secure/earns/s04-gaming',
      tests: 'jasmine-test-s04-earns-games.js',
      interactions: 'interaction-s04-go2earn-torjubel.js'
    }, {
      url: '/secure/earns/details/EarnCheerButton:s04-cheer-button/00000000000000000000',
      tests: 'jasmine-test-s04-earn-torjubel.js',
      interactions: 'interaction-s04-go2earns.js',
      testsIterations: amount,
      customJasmineTimeoutInterval: waiting
    }, {
      url: '/secure/earns/s04-collect-with-schalke',
      tests: '../jasmine-test-dummy.js'
    }
  ];

  fixOffercode = function(url) {
    var match;
    match = /(\/secure\/earns\/details\/[^\/]+)\/.*/.exec(url);
    if (match) {
      return match[1];
    } else {
      return url;
    }
  };

  phTest = new PhantomTest();

  runPage = function(idx) {
    var nextUrl, url, _ref5;
    idx = idx || 0;
    url = "" + baseUrl + pages[idx].url;
    nextUrl = fixOffercode("" + baseUrl + ((_ref5 = pages[idx + 1]) != null ? _ref5.url : void 0));
    return phTest.run({
      url: idx ? null : url,
      tests: pages[idx].tests,
      interactions: pages[idx].interactions,
      testsIterations: pages[idx].testsIterations,
      customJasmineTimeoutInterval: pages[idx].customJasmineTimeoutInterval,
      onPageLoaded: function(status) {
        var currUrl, _base;
        phTest.defaultOnPageLoaded(status);
        currUrl = fixOffercode(phTest.currUrl);
        if (currUrl === nextUrl) {
          return (typeof (_base = pages[++idx]).onPageLoaded === "function" ? _base.onPageLoaded(status) : void 0) || runPage(idx);
        }
      },
      onTestsCompleted: idx < pages.length - 1 ? pages[idx].onTestsCompleted : (function() {
        return phantom.exit();
      })
    });
  };

  runPage();

}).call(this);
